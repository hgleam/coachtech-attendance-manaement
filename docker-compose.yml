# 最新版のdocker composeの場合、version指定は不要
# version: '3.8'

services:
  nginx:
    image: nginx:1.21.1
    ports:
      - "82:80" # 80ポート利用しているので82で接続
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src:/var/www:cached
    depends_on:
      - php
    cpus: "0.50"
    mem_limit: 1g
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "3" }

  php:
    build: ./docker/php
    volumes:
      - ./src:/var/www:cached
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "3" }

  mysql:
    image: mysql:8.0.26
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel_db
      MYSQL_USER: laravel_user
      MYSQL_PASSWORD: laravel_pass
      MYSQL_INITDB_SKIP_TZINFO: "1"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf:ro
    # 一時領域は tmpfs に（I/O軽減）
    tmpfs:
      - /tmp
    cpus: 0.50
    mem_limit: 1g
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "3" }

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    environment:
      PMA_ARBITRARY: 1
      PMA_HOST: mysql
      PMA_USER: laravel_user
      PMA_PASSWORD: laravel_pass
    depends_on:
      - mysql
    ports:
      - 8080:80
    cpus: 0.50
    mem_limit: 1g
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "3" }

  mailhog:
    image: mailhog/mailhog
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP
    cpus: 0.25
    mem_limit: 512m
    logging:
      driver: "json-file"
      options: { max-size: "10m", max-file: "3" }

volumes:
  mysql-data:
